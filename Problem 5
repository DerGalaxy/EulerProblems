import math

def isprime(n):
    #return true if n is prime
    i=2
    while i < n:
        if n % i == 0:
            return False
        i += 1
    return True

def divides_into(n, factor): 
#function that finds how many times a number divides into another
    counter = 0
    if n % factor == 0:
        while n/factor != 1/factor:
            counter += 1
            n = n/factor
    return counter

def primes(n):
    #list of all prime factors
    prime_factors = []
    d = 2
    while d*d <= n:
        while (n % d) == 0:
            prime_factors.append(d)
            n //= d
        d += 1
    if n > 1:
        prime_factors.append(n)
    return prime_factors

prime_factors = {}
for i in range(1, 21):
    if isprime(i):
        prime_factors[i] = 0
        for j in range(2, 21):
            n = primes(j).count(i)
            if prime_factors[i] < n:
                prime_factors[i] = n
product = 1
for number in prime_factors: 
    if prime_factors[number] != 0:
        product = product*number**(prime_factors[number])
        
#input product in shell to see value
